{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/App/App.jsx","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css"],"names":["module","exports","nameInputId","shortid","generate","numberInputId","ContactForm","onSubmit","useState","JSON","parse","window","localStorage","getItem","name","setName","number","setNumber","useEffect","setItem","stringify","handleChange","evt","currentTarget","value","reset","preventDefault","className","s","form","htmlFor","label","text","type","pattern","title","onChange","id","required","btn","ContactList","contacts","onDeleteContact","map","divItem","liItem","onClick","Filter","input","App","setContacts","filter","setFilter","normalizedFilter","toLowerCase","filteredContacts","contact","includes","console","log","find","alert","prevState","target","newContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,MAAQ,wB,uJCGpBC,EAAcC,IAAQC,WACtBC,EAAgBF,IAAQC,WA4EfE,EA1EK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClB,EAAwBC,oBAAS,WAAO,IAAD,EACnC,iBAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,gBAA9C,QAA0D,MAD9D,mBAAOC,EAAP,KAAaC,EAAb,KAGA,EAA4BP,oBAAS,WAAO,IAAD,EACvC,iBAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,kBAA9C,QAA4D,MADhE,mBAAOG,EAAP,KAAeC,EAAf,KAIAC,qBAAU,WACNP,OAAOC,aAAaO,QAAQ,OAAQV,KAAKW,UAAUN,MACpD,CAACA,IACJI,qBAAU,WACNP,OAAOC,aAAaO,QAAQ,SAAUV,KAAKW,UAAUJ,MACtD,CAACA,IAEJ,IAAMK,EAAe,SAAAC,GACjB,MAAwBA,EAAIC,cAApBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACd,OAAQV,GACJ,IAAK,OACDC,EAAQS,GACR,MACJ,IAAK,SACDP,EAAUO,GACV,MACJ,QACI,SAUNC,EAAQ,WACVV,EAAQ,IACRE,EAAU,KAKV,OACI,uBAAMV,SAfO,SAAAe,GACjBA,EAAII,iBAEJnB,EAAS,CAACO,OAAME,WAChBS,KAWkCE,UAAWC,IAAEC,KAA3C,UACI,wBAAOC,QAAS5B,EAAayB,UAAWC,IAAEG,MAA1C,UAAiD,mBAAGJ,UAAWC,IAAEI,KAAhB,kBAC7C,uBACIC,KAAK,OACLnB,KAAK,OACLU,MAAOV,EACPoB,QAAQ,yHACRC,MAAM,kcACNC,SAAUf,EACVgB,GAAInC,EACJoC,UAAQ,OAGhB,wBAAOR,QAASzB,EAAesB,UAAWC,IAAEG,MAA5C,UAAmD,mBAAGJ,UAAWC,IAAEI,KAAhB,oBAC/C,uBACIC,KAAK,MACLnB,KAAK,SACLU,MAAOR,EACPkB,QAAQ,yFACRC,MAAM,giBACNC,SAAUf,EACVgB,GAAIhC,EACJiC,UAAQ,OAIhB,wBAAQL,KAAK,SAASN,UAAWC,IAAEW,IAAnC,6B,gBCxDDC,EAhBK,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,gBAC5B,OACI,6BACKD,EAASE,KAAI,gBAAGN,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACV,sBAAcW,UAAWC,IAAEgB,QAA3B,UACI,qBAAIjB,UAAWC,IAAEiB,OAAjB,UAA0B/B,EAA1B,KAAkCE,KADtC,IACmD,wBAAQ8B,QAAS,SAACxB,GAAD,OAAOoB,EAAgBpB,IAAMK,UAAWC,IAAEW,IAAKF,GAAIA,EAApE,sBADzCA,S,iBCJpBnC,EAAcC,IAAQC,WASb2C,EAPA,SAAC,GAAD,IAAEvB,EAAF,EAAEA,MAAOY,EAAT,EAASA,SAAT,OACX,wBAAON,QAAS5B,EAAhB,kCAEI,uBAAO+B,KAAK,OAAOT,MAAOA,EAAOY,SAAUA,EAAUC,GAAInC,EAAayB,UAAWC,IAAEoB,YCkD5EC,EArDH,WACR,MAAgCzC,oBAAS,WAAO,IAAD,EAC3C,iBAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBAA9C,QAA8D,MADlE,mBAAO4B,EAAP,KAAiBS,EAAjB,KAGA,EAA4B1C,mBAAS,IAArC,mBAAO2C,EAAP,KAAeC,EAAf,KAEClC,qBAAU,WACPP,OAAOC,aAAaO,QAAQ,WAAYV,KAAKW,UAAUqB,MACxD,CAACA,IAEJ,IAIMY,EAAmBF,EAAOG,cAC1BC,EAAmBF,EACnBZ,EAASU,QAAO,SAAAK,GAAO,OACrBA,EAAQ1C,KAAKwC,cAAcG,SAASJ,KACpCK,QAAQC,IAAIlB,IAEdA,EAsBN,OACI,qCACI,2CACA,cAAC,EAAD,CAAalC,SAvBF,SAAC,GAAoB,IAAnBO,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,OACvB,GAAIyB,EAASmB,MAAK,SAAAJ,GAAO,OAAIA,EAAQ1C,KAAKwC,gBAAkBxC,EAAKwC,iBAC7D,OAAOO,MAAM,kGAEjB,IAAML,EAAU,CACZnB,GAAIlC,IAAQC,WACZU,OACAE,UAEJkC,GAAY,SAAAY,GAAS,OAAKN,GAAL,mBAAiBM,UAelC,0CACA,cAAC,EAAD,CAAQtC,MAAO2B,EAAQf,SArCV,SAAAd,GACjB8B,EAAU9B,EAAIC,cAAcC,UAqCxB,cAAC,EAAD,CAAaiB,SAAUc,EAAkBb,gBAf3B,SAAApB,GAClB,IAAMe,EAAKf,EAAIyC,OAAO1B,GAChB2B,EAAcvB,EAASU,QAAO,SAAAK,GAAO,OAAIA,EAAQnB,KAAOA,KAE9Da,EAAYc,GACZZ,EAAU,W,MCvClBa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BrE,EAAOC,QAAU,CAAC,KAAO,0BAA0B,IAAM,yBAAyB,MAAQ,2BAA2B,KAAO,4B,kBCA5HD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,OAAS,4BAA4B,IAAM,4B","file":"static/js/main.f82af75c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2Io7H\"};","import React, {useState, useEffect} from 'react';\nimport shortid from 'shortid';\nimport s from '../ContactForm/ContactForm.module.css'\n\nconst nameInputId = shortid.generate();\nconst numberInputId = shortid.generate();\n\nconst ContactForm = ({onSubmit}) => {\n    const [name, setName] = useState(() => {\n        return JSON.parse(window.localStorage.getItem('name')) ?? '';\n    });\n    const [number, setNumber] = useState(() => {\n        return JSON.parse(window.localStorage.getItem('number')) ?? '';\n    });\n    \n    useEffect(() => {\n        window.localStorage.setItem('name', JSON.stringify(name))\n    }, [name]);\n    useEffect(() => {\n        window.localStorage.setItem('number', JSON.stringify(number))\n    }, [number]);\n\n    const handleChange = evt => {\n        const { name, value } = evt.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }\n    }\n    const handleSubmit = evt => {\n        evt.preventDefault();\n\n        onSubmit({name, number});\n        reset();\n    }\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    }\n\n    \n    \n        return (\n            <form onSubmit={handleSubmit} className={s.form}>\n                <label htmlFor={nameInputId} className={s.label}><p className={s.text}>Name</p>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        onChange={handleChange}\n                        id={nameInputId}\n                        required\n                    />\n                </label>\n                <label htmlFor={numberInputId} className={s.label}><p className={s.text}>Number</p>\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        value={number}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        onChange={handleChange}\n                        id={numberInputId}\n                        required\n                        \n                    />\n                </label>\n                <button type='submit' className={s.btn}>Add contact</button>\n            </form>\n        );\n    \n}\nexport default ContactForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../ContactList/ContactList.module.css';\n\nconst ContactList = ({contacts, onDeleteContact}) => {\n    return (\n        <ul>\n            {contacts.map(({ id, name, number}) => (\n                <div key={id} className={s.divItem}>\n                    <li className={s.liItem}>{name}: {number}</li> <button onClick={(evt)=>onDeleteContact(evt)} className={s.btn} id={id}>Delete</button>\n                </div>\n            ))}\n        </ul>\n    )\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n\n};\nexport default ContactList;\n\n","import React from 'react';\nimport shortid from 'shortid';\nimport s from '../Filter/Filter.module.css';\n\nconst nameInputId = shortid.generate();\n\nconst Filter = ({value, onChange }) => (\n    <label htmlFor={nameInputId}>\n        Find contacts by Name\n        <input type=\"text\" value={value} onChange={onChange} id={nameInputId} className={s.input}/>\n    </label>\n)\n\nexport default Filter;","import React, { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\n\nconst App = () => {\n    const [contacts, setContacts] = useState(() => {\n        return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n    });\n    const [filter, setFilter] = useState('');\n\n     useEffect(() => {\n        window.localStorage.setItem('contacts', JSON.stringify(contacts))\n    }, [contacts]);\n\n    const changeFilter = evt => {\n        setFilter(evt.currentTarget.value)\n    }\n\n    const normalizedFilter = filter.toLowerCase()\n    const filteredContacts = normalizedFilter\n        ? contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter),\n            console.log(contacts)\n        )\n        : contacts;\n    \n    const addContact = ({name, number}) => {\n        if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n            return alert('Уже есть такое имя!')\n        }\n        const contact = {\n            id: shortid.generate(),\n            name,\n            number,\n        }\n        setContacts(prevState => [contact, ...prevState]);\n    }\n    const deleteContact = evt => {\n        const id = evt.target.id;\n        const newContacts = contacts.filter(contact => contact.id !== id);\n\n        setContacts(newContacts);\n        setFilter('');\n    }\n    \n\n    return (    \n        <>\n            <h1>Phonebook</h1>\n            <ContactForm onSubmit={addContact}/>\n            <h2>Contacts</h2>\n            <Filter value={filter} onChange={changeFilter} />\n            <ContactList contacts={filteredContacts} onDeleteContact={deleteContact}/>\n        </>\n    )\n    \n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App'\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3EKUF\",\"btn\":\"ContactForm_btn__q3PXP\",\"label\":\"ContactForm_label__ID0BV\",\"text\":\"ContactForm_text__6C8gT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divItem\":\"ContactList_divItem__36zuj\",\"liItem\":\"ContactList_liItem__2hLsM\",\"btn\":\"ContactList_btn__2u8Ui\"};"],"sourceRoot":""}